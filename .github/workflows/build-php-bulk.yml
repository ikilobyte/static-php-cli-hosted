name: Build Self-Hosted PHP Binary (bulk)

on:
    workflow_dispatch:

jobs:
    build-release-artifacts:
        name: "Build ${{ matrix.php-version }} on ${{ matrix.operating-system }}"
        runs-on: ${{ matrix.operating-system }}
        strategy:
            fail-fast: false
            matrix:
                php-version:
                    - "8.2"
                operating-system:
                    - "debian-arm64-self-hosted"
                extensions:
                    - apcu,bcmath,calendar,ctype,curl,dba,dom,event,exif,ffi,fileinfo,filter,gd,iconv,inotify,intl,mbregex,mbstring,mongodb,mysqli,mysqlnd,opcache,openssl,pcntl,pdo,pdo_mysql,pdo_pgsql,pdo_sqlite,pgsql,phar,posix,readline,redis,session,shmop,simplexml,soap,sockets,sodium,sqlite3,swoole,swoole-hook-mysql,tokenizer,xlswriter,xml,xmlreader,xmlwriter,xsl,zip,zlib

        steps:
            -   name: "Checkout"
                uses: "actions/checkout@v4"

            -   name: OS type
                id: os-type
                run: |
                    OS=""
                    if [ "${{ matrix.operating-system }}" = "ubuntu-latest" ]; then
                        OS="linux-x86_64"
                    elif [ "${{ matrix.operating-system }}" = "macos-13" ]; then
                        OS="macos-x86_64"
                    elif [ "${{ matrix.operating-system }}" = "debian-arm64-self-hosted" ]; then
                        OS="linux-aarch64"
                    elif [ "${{ matrix.operating-system }}" = "macos-14" ]; then
                        OS="macos-aarch64"
                    fi
                    echo "OS=$OS" >> $GITHUB_ENV

            -   name: Download SPC bin artifact for self-hosted runners
                uses: dawidd6/action-download-artifact@v2
                with:
                    repo: crazywhalecc/static-php-cli
                    branch: main
                    workflow: release-build.yml
                    name: "spc-${{ env.OS }}"

            -   name: Validate SPC bin
                run: |
                    chmod +x spc
                    ./spc --version

            -   id: cache-download
                uses: actions/cache@v3
                with:
                    path: downloads
                    key: php-${{ matrix.php-version }}-dependencies-for-bulk-extensions

            # If there's no dependencies cache, fetch sources
            -   name: "Download sources"
                env:
                    GITHUB_TOKEN: ${{ secrets.S_GITHUB_TOKEN }}
                run: ./spc download --with-php=${{ matrix.php-version }} --for-extensions=${{ matrix.extensions }}

            -   name: "Build library: ${{ matrix.library }}"
                run: |
                    SPC_USE_SUDO=yes ./spc doctor --auto-fix
                    if [ "${{ env.OS }}" = "linux-x86_64" ]; then
                      ./spc install-pkg upx
                      UPX=--with-upx-pack
                    elif [ "${{ env.OS }}" = "linux-aarch64" ]; then
                      ./spc install-pkg upx
                      UPX=--with-upx-pack
                    fi
                    ./spc build --build-cli  ${{ matrix.extensions }} -I "swoole.use_shortname='Off'" --debug 
                    PHPVER=$(cat source/php-src/main/php_version.h | grep "PHP_VERSION " | awk -F\" '{print $2}')
                    mkdir dist/
                    tar -czf dist/php-$PHPVER-cli-$OS.tar.gz -C buildroot/bin/ php
                    if [ "${{ matrix.php-version }}" == "8.3" ] && [ "${{ matrix.operating-system }}" == "ubuntu-latest" ]; then
                      cp -r buildroot/license dist/
                      cp buildroot/build-extensions.json dist/
                      cp buildroot/build-libraries.json dist/
                    fi


            -   name: "Upload Artifact"
                uses: actions/upload-artifact@v3
                with:
                    name: php-${{ matrix.php-version }}-${{ env.OS }}
                    path: |
                        buildroot/bin/php
                    if-no-files-found: error
